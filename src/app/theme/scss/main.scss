@import "coleccion1.scss";
@import "fx.scss";
@import "colors.scss";

@each $value in (flex, none, block, inline-block) {
  .d-#{$value} {
    display: $value;
  }
}

@each $value in (row, column) {
  .flex-#{$value} {
    flex-direction: $value;
  }
}

@each $abrev,
  $value
    in (
      c: center,
      center: center,
      sb: space-between,
      space-between: space-between,
      se: space-evenly,
      end: end,
      start: start
    )
{
  .jc-#{$abrev} {
    justify-content: $value;
  }
}

@each $abrev,
  $value
    in (c: center, center: center, s: start, e: end, end: end, start: start, stretch: stretch)
{
  .ai-#{$abrev} {
    align-items: $value;
  }
}

@for $i from 1 through 20 {
  $val: 5 * $i;
  $valpx: $val + px !important;

  .gap-#{$val}px {
    @extend .d-flex;
    gap: $valpx;
  }

  .pad-#{$val}px {
    padding: $valpx;
  }

  .padh-#{$val}px {
    padding-top: $valpx;
    padding-bottom: $valpx;
  }

  .padw-#{$val}px {
    padding-left: $valpx;
    padding-right: $valpx;
  }

  .padt-#{$val}px {
    padding-top: $valpx;
  }

  .padr-#{$val}px {
    padding-right: $valpx;
  }

  .padb-#{$val}px {
    padding-bottom: $valpx;
  }

  .padl-#{$val}px {
    padding-left: $valpx;
  }

  .m-#{$val}px {
    margin: $valpx;
  }

  .mh-#{$val}px {
    margin-top: $valpx;
    margin-bottom: $valpx;
  }

  .mw-#{$val}px {
    margin-left: $valpx;
    margin-right: $valpx;
  }

  .mt-#{$val}px {
    margin-top: $valpx;
  }

  .mr-#{$val}px {
    margin-right: $valpx;
  }

  .mb-#{$val}px {
    margin-bottom: $valpx;
  }

  .ml-#{$val}px {
    margin-left: $valpx;
  }
}

// ---------------------------------------------
// 1. Tipograf√≠a
// ---------------------------------------------
@for $i from 1 through 10 {
  $fontSizePx: ($i * 2) + 8; // Genera: 10px, 12px, 14px, ... 26px
  $fontSizePct1: $i * 10; // Genera: 10, 20, 30, ... 100 (porcentaje)
  $fontSizePct2: ($i * 10) + 100; // Genera: 110, 120, 130, ... 200 (porcentaje)

  .fs-#{$fontSizePx}-px {
    font-size: $fontSizePx * 1px;
  }

  .fs-#{$fontSizePct1}p {
    font-size: $fontSizePct1 * 1%;
  }

  .fs-#{$fontSizePct2}p {
    font-size: $fontSizePct2 * 1%;
  }
}

@for $i from 1 through 12 {
  $vhVal: $i * 10; // 10, 20, 30, ..., 120
  $pxVal: $i * 50; // 50, 100, 150, ..., 600

  // Clases que usan vh y vw
  .h-#{$vhVal}vh {
    height: #{$vhVal}dvh;
  }
  .min-h-#{$vhVal}vh {
    min-height: #{$vhVal}dvh;
  }
  .w-#{$vhVal}vw {
    width: #{$vhVal}dvw;
  }
  .min-w-#{$vhVal}vw {
    min-width: #{$vhVal}dvw;
  }

  // Clases que usan px
  .min-h-#{$pxVal}px {
    min-height: #{$pxVal}px;
  }
  .max-h-#{$pxVal}px {
    max-height: #{$pxVal}px;
  }
  .min-w-#{$pxVal}px {
    min-width: #{$pxVal}px;
  }
  .max-w-#{$pxVal}px {
    max-width: #{$pxVal}px;
  }
}

@for $i from 1 through 10 {
  .w-#{$i * 10}p {
    width: $i * 10%;
  }

  .w-#{$i * 10}vw {
    width: $i * 10dvw;
  }

  .z-index#{$i} {
    z-index: $i;
  }

  .op-#{$i * 10} {
    opacity: $i / 10;
  }

  .br-#{$i * 5}px {
    border-radius: #{$i * 5}px !important;
  }
  .br-1100-#{$i * 5}px {
    border-radius: #{$i * 5}px #{$i * 5}px 0 0;
  }
}
